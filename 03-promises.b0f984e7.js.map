{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAqBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MA5BPL,EAAKY,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAK,IAAIC,EAAQ,EAAGA,EAAQf,EAAKgB,OAAOC,MAAOF,GAAS,EACtDZ,EACEY,EAAQ,EAERG,OAAOlB,EAAKK,MAAMY,OAASC,OAAOlB,EAAKmB,KAAKF,OAASF,GAEpDK,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAuB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,UAEtDkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAuB,OAAOG,QAAQ,sBAAoBpB,QAAeC,UAGxDQ,EAAMY,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  for (let index = 0; index < form.amount.value; index += 1) {\n    createPromise(\n      index + 1,\n\n      Number(form.delay.value) + Number(form.step.value) * index\n    )\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.target.reset();\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","index","amount","value","Number","step","then","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.b0f984e7.js.map"}